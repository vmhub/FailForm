@model FailForm.Models.InfoStorage
@using (Ajax.BeginForm("Post", "Home", null, new AjaxOptions()
                        {
                            UpdateTargetId = "formcontainer",
                            InsertionMode = InsertionMode.Replace,
                            HttpMethod = "POST",
                            LoadingElementId = "wait"
                        }, new { id = "form" }))
{
    <p>Please enter your name and pick the Sectors you are currently involved in. </p>

    <fieldset class="form-group">
        <label for="nm">Name</label>
        @Html.TextBoxFor(x => x.Name, new { @class = "form-control", id = "nm", placeholder = "Your name" })
        @Html.ValidationMessageFor(x => x.Name)
    </fieldset>
    <fieldset class="form-group">
        <label for="em">Email</label>
        @Html.TextBoxFor(x => x.Email, new { @class = "form-control", id = "em", placeholder = "Your email" })
        @Html.ValidationMessageFor(x => x.Email)
    </fieldset>
    <fieldset class="form-group">
        <label for="sl">Sector:</label>
        @Html.ListBoxFor(x => x.secVals, ViewBag.Data.list as MultiSelectList, new { Size = 5, @class = "form-control", id = "sl" })
        @Html.ValidationMessageFor(x => x.secVals)
    </fieldset>
    <fieldset class="form-group">
        <label for="ag">Agree to terms</label>
        <div class="checkbox">
            @Html.CheckBoxFor(x => x.Terms)
        </div>
        @Html.ValidationMessageFor(x => x.Terms)
    </fieldset>
    <div id="but">
        <input type="submit" class="btn btn-primary" value="Post" />
    </div>
    <script src="~/Scripts/resetvalidator.js"></script>
}
